class Solution {
public:
    bool isValid(string s) {
        stack<char>st;
        for(int i=0;i<s.length();i++){
            
            char ch = s[i];

            //if opening bracket push it in the stack
            //else if it is a closing bracket check top element of stack if it matches return true else return false
            if(ch == '(' || ch == '{' || ch == '['){
                st.push(ch);
            }else{
                //first check if stack is not empty
                if(!st.empty()){
                    char top = st.top();
                   if((ch == ')'&& top == '(') || 
                      (ch == '}'&& top == '{')||
                      (ch == ']'&& top == '[')){
                 st.pop();
                 }
                 else {
                    return false;
                }
                  
                }
                
                else {
            return false;}
        }
            }
            
        if(st.empty()){
            return true;
        }else return false;
    }
};
